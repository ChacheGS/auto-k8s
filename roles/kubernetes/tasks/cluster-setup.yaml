---
- name: Cluster Setup - Check if a cluster already exists
  stat:
    path: "/etc/kubernetes/pki/ca.key"
  register: cluster
  delegate_to: "{{ groups.masters | first }}"
  run_once: true


- name: Cluster setup - Get apiserver IP
  set_fact:
    kubernetes_cluster_apiserver_ip: "{{ hostvars[inventory_hostname]['ansible_' + kubernetes_master_iface].ipv4.address }}"
  delegate_to: "{{ groups.masters | first }}"
  run_once: true


- name: Cluster Setup - Generate certificate-key
  command: kubeadm alpha certs certificate-key
  register: kubernetes_certificate_key
  delegate_to: "{{ groups.masters | first }}"
  run_once: true


- name: Cluster HA Setup - Init
  command: >
    kubeadm init
    --control-plane-endpoint {{ kubernetes_cluster_control_plane_endpoint }}:{{ kubernetes_cluster_apiserver_port }}
    --certificate-key {{ kubernetes_certificate_key.stdout }}
    --upload-certs
    --ignore-preflight-errors=all
    {{ kubernetes_cluster_init_extra_opts }}
  delegate_to: "{{ groups.masters | first }}"
  run_once: true
  when:
    - not cluster.stat.exists
    - groups.masters | length > 1


- name: Cluster Setup - Init
  command: >
    kubeadm init
    --certificate-key {{ kubernetes_certificate_key.stdout }}
    --upload-certs
    --ignore-preflight-errors=all
    {{ kubernetes_cluster_init_extra_opts }}
  delegate_to: "{{ groups.masters | first }}"
  run_once: true
  when:
    - not cluster.stat.exists
    - groups.masters | length == 1
